<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>

<name>SoftwareServo</name>

<category>I/O</category>

<subcategory></subcategory>

<usage>Application</usage>

<example>
<image></image>
<code><![CDATA[
import processing.io.*;
SoftwareServo servo;

void setup() {
  servo = new SoftwareServo(this);
  servo.attach(4);

  // On the Raspberry Pi, GPIO 4 is pin 7 on the pin header,
  // located on the fourth row, above one of the ground pins
}

void draw() {
  // we don't go right to the edge to prevent
  // making the servo unhappy
  float angle = 90 + sin(frameCount / 100.0)*85;
  servo.write(angle);
}

]]></code>
</example>

<description><![CDATA[
Opens an RC servo motor connected to a GPIO pin<br/>
</br>
This library uses timers to control RC servo motors by means of pulse width
modulation (PWM). While not as accurate as dedicated PWM hardware, it has
shown to be sufficient for many applications.<br/>
<br/>
Connect the signal wire (typically colored yellow) to any available GPIO pin
and control the servo's angle as shown in the example sketch.
]]></description>

</root>
