<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>

<name>releasePin()</name>

<category>I/O</category>

<subcategory></subcategory>

<usage>Web &amp; Application</usage>

<example>
<image></image>
<code><![CDATA[
import processing.io.*;
boolean ledOn = false;

void setup() {
  GPIO.pinMode(4, GPIO.OUTPUT);

  // On the Raspberry Pi, GPIO 4 is pin 7 on the pin header,
  // located on the fourth row, above one of the ground pins

  frameRate(0.5);
}

void draw() {
  ledOn = !ledOn;
  if (ledOn) {
    GPIO.digitalWrite(4, GPIO.LOW);
  } else {
    GPIO.digitalWrite(4, GPIO.HIGH);
  }
}

// cleanup on keypress
void keyPressed() {
  GPIO.releasePin(4);
  exit();
}

]]></code>
</example>

<description><![CDATA[
Gives ownership of a pin back to the operating system<br/>
<br/>
Without calling this function, the pin will remain in the current state even after the sketch has been closed.
]]></description>

<syntax>
<c>GPIO</c>.releasePin()
</syntax>

<parameter></parameter>

<returns></returns>

<related></related>

<availability>1.0</availability>

<type>Method</type>

<partof>Library</partof>

</root>
