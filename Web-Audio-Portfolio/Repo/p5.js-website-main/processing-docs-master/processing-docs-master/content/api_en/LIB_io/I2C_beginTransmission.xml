<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>

<name>beginTransmission()</name>

<category>I/O</category>

<subcategory></subcategory>

<usage>Web &amp; Application</usage>

<example>
<image></image>
<code><![CDATA[
import processing.io.*;
I2C dac;

void setup() {
  //printArray(I2C.list());
  dac = new I2C(I2C.list()[0]);
}

void draw() {
  background(map(mouseX, 0, width, 0, 255));

  // send value over I2C to a digital-to-analog
  // converter with address 96 (hex 0x60)
  int val = int(4095 * map(mouseX, 0, width, 0.0, 1.0));
  dac.beginTransmission(0x60);
  dac.write(val >> 8);
  dac.write(val & 255);
  dac.endTransmission();
}

]]></code>
</example>

<description><![CDATA[
Begins a transmission to an attached device<br/>
<br/>
This function expects the address in the lower 7 bits, the same way as in Arduino's Wire library, and as shown in the output of the i2cdetect tool. If the address provided in a datasheet is greater than 127 (hex 0x7f) or there are separate addresses for read and write operations listed, which vary exactly by one, then you want to shift the this number by one bit to the right before passing it as an argument to this function.
]]></description>

<syntax>
<c>i2c</c>.beginTransmission()
</syntax>

<parameter></parameter>

<returns></returns>

<related></related>

<availability>1.0</availability>

<type>Method</type>

<partof>Library</partof>

</root>
