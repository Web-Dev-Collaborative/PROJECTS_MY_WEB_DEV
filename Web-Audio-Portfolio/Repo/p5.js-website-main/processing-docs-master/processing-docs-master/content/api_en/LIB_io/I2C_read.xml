<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>

<name>read()</name>

<category>I/O</category>

<subcategory></subcategory>

<usage>Web &amp; Application</usage>

<example>
<image></image>
<code><![CDATA[
import processing.io.*;
I2C compass;

void setup() {
  //printArray(I2C.list());
  compass = new I2C(I2C.list()[0]);
}

void draw() {
  // read the heading over I2C from a compass module
  // with address 33 (hex 0x21)
  compass.beginTransmission(0x21);
  // first send a command byte
  compass.write(0x41);
  // read in two bytes
  byte[] in = compass.read(2);

  // put bytes together to tenth of degrees
  // & 0xff makes sure the byte is not interpreted as a negative value
  int deg = (in[0] & 0xff) << 8 | (in[1] & 0xff);
  println((deg / 10.0));
}

]]></code>
</example>

<description><![CDATA[
Read bytes from the attached device<br/>
<br/>
You must call beginTransmission() before calling this function.
This function also ends the current transmission and sends any data
that was queued using write() before. It is not necessary to call
<a href="I2C_endTransmission_.html">endTransmission()</a> after read().
]]></description>

<syntax>
<c>i2c</c>.read()
</syntax>

<parameter></parameter>

<returns></returns>

<related></related>

<availability>1.0</availability>

<type>Method</type>

<partof>Library</partof>

</root>
