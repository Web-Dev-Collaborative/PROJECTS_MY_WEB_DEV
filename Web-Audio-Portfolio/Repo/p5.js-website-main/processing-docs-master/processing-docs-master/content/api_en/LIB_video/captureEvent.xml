<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>captureEvent()</name>

<category>Video</category>

<subcategory></subcategory>

<usage>Web &amp; Application</usage>

<example>
<image></image>
<code><![CDATA[
import processing.video.*; 
Capture cam; 
 
void setup() { 
  size(200, 200); 
  cam = new Capture(this);
  cam.start(); 
} 
 
void draw() { 
  image(cam, 0, 0); 
} 

void captureEvent(Capture c) {
  c.read();
}
]]></code>
</example>

<description><![CDATA[
This event function is run when a new camera frame is available. Use the <b>read()</b> method to capture this frame. If there is more than one capture device in the program, <b>captureEvent()</b> is called each time any of the devices has a new frame available. Use an <b>if</b> within the function to determine which device is triggering the event.
<br /><br />
This function is for people who want to process the image data separately from drawing (and as quickly as possible.) You cannot draw to the screen inside the <b>captureEvent()</b> function. If you want to draw immediately based on the new image, then use the <b>Capture.available()</b> method.
]]></description>

<syntax>
void captureEvent(Capture <c>which</c>) {
  <c>statements</c>
}
</syntax>

<parameter>
<label>statements</label>
<description><![CDATA[any valid statements]]></description>
</parameter>

<parameter>
<label>which</label>
<description><![CDATA[the camera with the event]]></description>
</parameter>

<returns></returns>

<related>
Capture
</related>

<availability>1.0</availability>

<type>Function</type>

<partof>core</partof>








</root>
